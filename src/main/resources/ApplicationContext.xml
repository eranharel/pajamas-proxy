<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="false"/>
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
    <property name="location" value="file:#{ systemProperties['pajamas.properties'] }"/>
  </bean>

  <bean id="pajamasProxyDaemon" class="com.outbrain.pajamasproxy.memcached.PajamasProxyDaemon">
    <constructor-arg ref="serverBootstrap"/>
    <constructor-arg ref="serverSocketChannelFactory"/>
    <constructor-arg value="${pajamas.localPort}"/>
  </bean>
  
  <bean id="serverBootstrap" class="org.jboss.netty.bootstrap.ServerBootstrap">
    <constructor-arg ref="serverSocketChannelFactory"/>
    <property name="pipelineFactory" ref="channelPipelineFactory"/>
    <property name="options">
      <map>
        <entry key="sendBufferSize" value="${pajamas.sendBufferSize}"/>
        <entry key="receiveBufferSize" value="${pajamas.receiveBufferSize}"/>
      </map>
    </property>
  </bean>

  <!-- the Executor which will execute the boss threads -->
  <bean id="bossExecutor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool"/>
  <!-- the Executor which will execute the I/O worker threads -->
  <bean id="workerExecutor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool"/>

  <bean id="serverSocketChannelFactory" class="org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory">
    <constructor-arg ref="bossExecutor"/>
    <constructor-arg ref="workerExecutor"/>
  </bean>
  
  <bean id="channelPipelineFactory" class="com.outbrain.pajamasproxy.memcached.protocol.binary.BinaryPipelineFactory">
    <constructor-arg>
      <bean class="com.outbrain.pajamasproxy.memcached.protocol.binary.BinaryCommandDecoder"/>      
    </constructor-arg>
    <constructor-arg ref="memcachedCommandHandler"/>
  </bean>
  
  <bean id="memcachedCommandHandler" class="com.outbrain.pajamasproxy.memcached.protocol.MemcachedCommandHandler">        
    <constructor-arg ref="memcachedClient"/>
  </bean>



	<bean name="memcachedClient" class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean" destroy-method="shutdown">
		<property name="servers" value="${pajamas.remoteHosts}"/>
		<!-- nio connection pool size -->
		<property name="connectionPoolSize" value="2"></property>
		<!-- Use binary protocol,default is TextCommandFactory -->
		<property name="commandFactory">
			<bean class="net.rubyeye.xmemcached.command.BinaryCommandFactory"/>
		</property>
		<!-- Distributed strategy -->
		<property name="sessionLocator">
			<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"/>
		</property>
		<property name="transcoder">
			<bean class="com.outbrain.pajamasproxy.util.ProxyTranscoder" />
		</property>
		<!-- ByteBuffer allocator -->
		<property name="bufferAllocator">
			<bean class="net.rubyeye.xmemcached.buffer.SimpleBufferAllocator"/>
		</property>
	</bean>
</beans>
